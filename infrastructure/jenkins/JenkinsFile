pipeline{
    agent any
    environment {
    stages{
        stage("Dependencies"){
            steps{
                sh "bash jenkins/scripts/install-dependencies.sh"
            }
        }
        stage("Testing"){
            steps{
                sh "bash jenkins/test.sh"
            }
        }
        stage("Build & Push"){
            steps{
                sh "docker-compose build --parallel && docker-compose push"
                sh "docker system prune -af"
            }
        }
        stage("Config Management"){
            steps{
                sh "cd ansible && /home/jenkins/.local/bin/ansible-playbook -i inventory playbook.yaml"
            }
        }
        stage("Deploy"){
            steps{
                sh "bash jenkins/deploy.sh"
            }
        }
    }
    post{
        always{
            junit "**/junit.xml"
            cobertura coberturaReportFile: '**/coverage.xml', failNoReports: false, failUnstable: false, onlyStable: false
        }
    }
    }
}